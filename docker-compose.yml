version: "2"

services:
  postgresdb:
      image: postgres:9.5
      environment:
        - POSTGRES_USER=${DB_BUILD_USER}
        - POSTGRES_PASSWORD=${DB_BUILD_PASS}
        - POSTGRES_DB=${DB_BUILD_NAME}
      ports:
        - '5432:5432'
      volumes:
          - postgresfinanciera:/var/lib/postgresql/data          
          - ./bkup:/bkup
  schemaspy:
      build:
        context: ./schemaspy_build
        args:
          - PROXY=$PROXY
      volumes:
          - ./workspace/angular/schemaspy:/output
      links:
          - postgresdb:database
      environment:
        - POSTGRES_USER=${DB_BUILD_USER}
        - POSTGRES_PASSWORD=${DB_BUILD_PASS}
        - POSTGRES_DB=${DB_BUILD_NAME}
        - SCHEMASPY_SCHEMA=${SCHEMASPY_SCHEMA}
      depends_on:
        - postgresdb
  crud:
    #image: golang:1.8
    build: 
      context: ./bee_build
      args:
          - PROXY=$PROXY
          - USER_ID=$USER_ID
    env_file:
      - .env_secret.env
    command: sh -c 'go get -u github.com/udistrital/$CRUD_GET_INFO;cd src/github.com/udistrital/$CRUD_GET_INFO;git checkout $CRUD_BRANCH_TARGET;git pull origin $CRUD_BRANCH_TARGET;go get ./...;bee run'
    ports:
      - '${CRUD_PORT}:${CRUD_PORT}'
    links:
      - postgresdb
    volumes:
      - ./workspace/go/src/github.com/udistrital/:/home/developer/go/src/github.com/udistrital/
    user: "$USER_ID"
    depends_on:
      - postgresdb

  mid:
    #image: golang:1.8
    build: 
      context: ./bee_build
      args:
          - PROXY=$PROXY
          - USER_ID=$USER_ID
    env_file:
      - .env_secret.env
    command: sh -c 'go get -u github.com/udistrital/$MID_GET_INFO;cd src/github.com/udistrital/$MID_GET_INFO;git checkout $MID_BRANCH_TARGET;git pull origin $MID_BRANCH_TARGET;go get ./...;bee run'
    ports:
      - '$MID_PORT:$MID_PORT' 
    volumes:
      - ./workspace/go/src/github.com/udistrital/:/home/developer/go/src/github.com/udistrital/
    user: "$USER_ID"
    links:
      - crud
      - mongo_api
    depends_on:
      - crud
  mongoexpress:
    image: mongo-express
    restart: on-failure
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=kronos_app
      - ME_CONFIG_MONGODB_ADMINPASSWORD=SOPORTE2018
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    ports:
      - 8081:8081
    depends_on:
      - mongodb
  mongodb:
    image: mongo:latest
    environment: 
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
      - MONGO_INITDB_ROOT_USERNAME=kronos_app
      - MONGO_INITDB_ROOT_PASSWORD=SOPORTE2018
    volumes:
      - ./mongo_data:/data/db
    ports:
      - 27017:27017 
  
  mongo_api:
    #image: golang:1.8
    build: 
      context: ./bee_build
      args:
          - PROXY=$PROXY
          - USER_ID=$USER_ID
    environment:
      - MONGO_API_GET_INFO=${MONGO_API_GET_INFO}
      - MONGO_API_BRANCH_TARGET=${MONGO_API_BRANCH_TARGET}
      - FINANCIERA_MONGO_CRUD_PORT=${MONGO_API_PORT}
    env_file:
      - .env_secret.env
    command: sh -c 'go get -u github.com/udistrital/$MONGO_API_GET_INFO;cd src/github.com/udistrital/$MONGO_API_GET_INFO;git checkout $MONGO_API_BRANCH_TARGET;git pull origin $MONGO_API_BRANCH_TARGET;go get ./...;bee run'
    ports:
      - '$MONGO_API_PORT:$MONGO_API_PORT'   
    volumes:
      - ./workspace/go/src/github.com/udistrital/:/home/developer/go/src/github.com/udistrital/
    depends_on:
      - mongodb
  apache2:
    image: httpd:2.4-alpine
    ports:
     - "80:80"
    volumes:
     - ./workspace/angular:/usr/local/apache2/htdocs/
  client:
    build:
      context: ./genoas_build
      args:
        - PROXY=$PROXY
        - USER_ID=$USER_ID
    env_file:
      - .env_secret.env
    command: sh -c 'git clone https://github.com/udistrital/$CLIENT_CLONE_INFO.git ;cd $CLIENT_CLONE_INFO;git checkout $CLIENT_BRANCH_TARGET;git pull origin $CLIENT_BRANCH_TARGET;npm dedupe;npm install; bower install; grunt serve'
    ports:
      - '$CLIENT_PORT:$CLIENT_PORT'
      - '35729:35729'
    depends_on:
      - crud
      - mid
    volumes:
      - ./workspace/angular:/workspace/angular
    user: "$USER_ID"
volumes:
  postgresfinanciera:
